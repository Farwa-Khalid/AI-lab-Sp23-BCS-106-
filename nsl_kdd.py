# -*- coding: utf-8 -*-
"""NSL-KDD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DH8bbdLUJUKjIMG1sIDtZnaFNZ3MAkCt

**MOUNT GOOGLE DRIVE**
"""

import google.colab
import drive
drive.mount('/content/drive')

"""**Importing Pandas Dataset**"""

import pandas as pd
import numpy
import matplotlib

import zipfile
import os

zip_path = "/content/drive/MyDrive/AI-Lab/NSL-KDD.zip"
extract_path = "/content/drive/MyDrive/AI-Lab/NSL-KDD"

# unzip
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall(extract_path)

print("Extracted files:", os.listdir(extract_path))


file_path = extract_path + "/KDDTrain+.txt"
df_train = pd.read_csv(file_path, header=None)

print(df_train.shape)
print(df_train.head())
print(df_train.isnull().values.any())
print(df_train.duplicated().any())

"""**Line Chart**"""

import matplotlib.pyplot as plt

# The label column is usually the last one
label_counts = df_train[df_train.columns[-1]].value_counts()

plt.figure(figsize=(10,5))
plt.plot(label_counts.index, label_counts.values, marker='o', linestyle='-', color='orange')

plt.title("Line Chart - Attack Types Frequency")
plt.xlabel("Attack Type")
plt.ylabel("Count")
plt.xticks(rotation=90)
plt.grid(True)
plt.show()

"""**Bar Chart**"""

label_counts.plot(kind='bar', figsize=(10,5), color='red')
plt.title("Bar Chart - Attack Types Frequency")
plt.xlabel("Attack Type")
plt.ylabel("Count")
plt.show()

"""**Pie Chart**"""

label_counts.plot(kind='pie', figsize=(8,8), autopct='%1.1f%%')
plt.title("Pie Chart - Attack Types Distribution")
plt.ylabel("")  # hide y-label
plt.show()

"""**Testing,Training Validation**"""

X_train, X_temp, y_train, y_temp = train_test_split(
    X, y, test_size=0.3, random_state=42, stratify=y
)

# Step B: Temp -> Validation (15%) + Test (15%)
X_val, X_test, y_val, y_test = train_test_split(
    X_temp, y_temp, test_size=0.5, random_state=42
)  # ⚠ no stratify here (some classes too small)

# ======================================
# 6. Show results
# ======================================
print("\n✅ Final Split:")
print("Training set:", X_train.shape, " Labels:", y_train.shape)
print("Validation set:", X_val.shape, " Labels:", y_val.shape)
print("Testing set:", X_test.shape, " Labels:", y_test.shape)

print("\nSample label distribution (train):")
print(y_train.value_counts().head())